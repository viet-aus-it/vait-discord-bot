name: Build and deploy Docker Image

on:
  push:
    branches:
      - master
    paths:
      - discord-bot/**
      - .github/workflows/build-and-deploy.yml

jobs:
  build-discord-bot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Docker meta
      #   id: docker_meta
      #   uses: crazy-max/ghaction-docker-meta@v1
      #   with:
      #     images: ghcr.io/viet-aus-it/discord-bot
      #     tag-sha: true
      #     tag-custom: production

      # - name: Setup Docker Buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Login to GitHub Docker
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ secrets.USER_NAME }}
      #     password: ${{ secrets.ACCESS_TOKEN }}

      # - name: Build and Push docker image
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: discord-bot
      #     file: discord-bot/.docker/Dockerfile
      #     pull: true
      #     push: true
      #     tags: ${{ steps.docker_meta.outputs.tags }}
      #     target: production

  # build-dashboard:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Docker meta
  #       id: docker_meta
  #       uses: crazy-max/ghaction-docker-meta@v1
  #       with:
  #         images: ghcr.io/viet-aus-it/discord-bot
  #         tag-sha: true
  #         tag-custom: production

  #     - name: Setup Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Login to GitHub Docker
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ secrets.USER_NAME }}
  #         password: ${{ secrets.ACCESS_TOKEN }}

  #     - name: Build and Push docker image
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: discord-bot
  #         file: discord-bot/.docker/Dockerfile
  #         pull: true
  #         push: true
  #         tags: ${{ steps.docker_meta.outputs.tags }}
  #         target: production

